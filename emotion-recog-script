def load_emotion_model():
    # Path to your downloaded pre-trained emotion recognition model
    model_path = 'files.download(conv-emotion-master.zip)'
    return load_model(model_path)

import cv2
import numpy as np
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing.image import img_to_array

def load_emotion_model():
    # Ensure the path to your model is correct
    model_path = 'files.download(conv-emotion-master.zip)'
    return load_model(model_path)

def main():
    model = load_emotion_model()
    cap = cv2.VideoCapture(0)

    # Face detection classifier
    face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')
    
    # Emotion labels based on the model's training
    emotion_labels = ['Angry', 'Disgust', 'Fear', 'Happy', 'Sad', 'Surprise', 'Neutral']

    while True:
        ret, frame = cap.read()
        if not ret:
            break

        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(48, 48))

        for (x, y, w, h) in faces:
            roi = gray[y:y + h, x:x + w]
            roi = cv2.resize(roi, (48, 48))
            roi = roi.astype("float") / 255.0
            roi = img_to_array(roi)
            roi = np.expand_dims(roi, axis=0)

            # Predicting the emotion
            preds = model.predict(roi)[0]  # This line defines 'preds'
            emotion_probability = np.max(preds)
            emotion_index = np.argmax(preds)
            emotion_label = emotion_labels[emotion_index]

            cv2.putText(frame, f"{emotion_label} - {emotion_probability:.2f}", (x, y - 10),
                        cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)
            cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)

        cv2.imshow('Emotion Recognition', frame)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    cap.release()
    cv2.destroyAllWindows()

if __name__ == "__main__":
    main()
